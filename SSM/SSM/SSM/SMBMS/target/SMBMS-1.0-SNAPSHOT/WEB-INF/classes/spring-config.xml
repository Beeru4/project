<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <!--指定外部属性文件-->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:database.properties"/>
    </bean>

    <!--DataSource-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="url" value="${url}"/>
        <property name="driverClassName" value="${driver}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
       <!-- <property name="initialSize" value="5"/>&lt;!&ndash; 在启动连接池初始创建的数据库连接，默认为0 &ndash;&gt;
        <property name="maxActive" value="15"/>&lt;!&ndash; 设置数据库同一时间的最大活跃连接默认为8，负数表示不闲置 &ndash;&gt;
        <property name="maxIdle" value="10"/>&lt;!&ndash; 在连接池空闲时的最大连接数，超过的会被释放，默认为8，负数表示不闲置 &ndash;&gt;
        <property name="minIdle" value="2"/>&lt;!&ndash; 空闲时的最小连接数，低于这个数量会创建新连接，默认为0 &ndash;&gt;
        <property name="maxWait" value="10000"/> 连接被用完时等待归还的最大等待时间，单位毫秒，超出时间抛异常，默认为无限等待 -->
    </bean>

    <!--PUBLIC-->

    <!--SqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="typeAliasesPackage" value="com.beerus.entity"/>
        <property name="mapperLocations" value="classpath:xml/*Mapper.xml"/>
    </bean>

    <!--import private-->
    <import resource="classpath:spring-config-dao.xml"/>

    <!--开启注解扫描-->
    <context:component-scan base-package="com.beerus.*"/>

    <!--配置增强事务-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <!--设置事务属性-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="update*" rollback-for="java.lang.Exception"/>
            <tx:method name="save*" rollback-for="java.lang.Exception"/>
            <tx:method name="delete*" rollback-for="java.lang.Exception"/>
            <tx:method name="modify*" rollback-for="java.lang.Exception"/>
            <tx:method name="count*" read-only="true"/>
            <tx:method name="list*" read-only="true"/>
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!--配置切入点-->
    <aop:config>
        <aop:pointcut id="serviceMethod" expression="execution(* com.beerus.service..*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod"/>
    </aop:config>


</beans>
